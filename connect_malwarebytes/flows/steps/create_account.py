from connect_malwarebytes.connect.const import (
    CONTACT_EMAIL_NAME, CONTACT_FIRST_NAME, CONTACT_LAST_NAME, CONTACT_PHONE_NAME,
    MSP_ACCOUNT_ID_FULFILLMENT, OWNER_EMAIL, PRODUCTION_ENV, VENDOR_ID,
)

from malwarebytes.account.domain.exceptions import (
    EmailAlreadyExistsError,
    InvalidEmailFormatError,
    InvalidFirstNameFormatError,
    InvalidLastNameFormatError,
    InvalidPhoneFormatError,
)
from malwarebytes.account.infrastructure.exceptions import AccountExistingEmailException
from malwarebytes.account.domain.models import AccountId
from malwarebytes.account.application.services import AccountCreator

dict_errors = {
    'InvalidFirstNameFormatError': CONTACT_FIRST_NAME,
    'InvalidLastNameFormatError': CONTACT_LAST_NAME,
    'InvalidPhoneFormatError': CONTACT_PHONE_NAME,
    'InvalidEmailFormatError': CONTACT_EMAIL_NAME,
    'AccountExistingEmailException': CONTACT_EMAIL_NAME,
    'EmailAlreadyExistsError': CONTACT_EMAIL_NAME,
}


def create_msp_account(flow):
    """
    Create a New MSP Account ID in MalwareBytes and Save MSP Account ID and Vendor ID
    :param flow:
    :return:
    """
    flow.logger.info("Processing an New MSP Account")

    if flow.get_msp_account_id_fulfillment() and AccountId(flow.get_msp_account_id_fulfillment()):
        flow.logger.info(f"Skip step for MSP Account creation. MSP Account ID "
                         f"{flow.get_msp_account_id_fulfillment()} was already created.")
        return

    try:
        contact = flow._get_parameters_contact()
        account = flow.get_parameters_account()

        flow.logger.info("Creating the MSP Account in MalwareBytes")
        test_account = (flow.request_data.environment() == PRODUCTION_ENV)

        msp_account = AccountCreator(flow.account_repository()).execute(
            account, contact, test_account)
        msp_account_id = msp_account.get('account_id')
        vendor_id = msp_account.get('vendor_id')
    except (
            InvalidFirstNameFormatError, InvalidLastNameFormatError,
            InvalidEmailFormatError, InvalidPhoneFormatError, EmailAlreadyExistsError,
            AccountExistingEmailException,
    ) as err:
        flow.logger.warning(str(err))

        name_error = flow.find_error_type(err)

        return flow.inquire_parameters([{"id": dict_errors[name_error], "value_error": str(err)}])

    flow.request_data.update_parameter(param_id=VENDOR_ID, value=vendor_id)

    flow.request_data.update_parameter(param_id=MSP_ACCOUNT_ID_FULFILLMENT, value=msp_account_id)

    flow.request_data.update_parameter(param_id=OWNER_EMAIL, value=contact.email.value)

    flow.logger.info(
        f"Updating parameters: {MSP_ACCOUNT_ID_FULFILLMENT}={msp_account_id}; "
        f"{VENDOR_ID}={msp_account.get('vendor_id')}.")

    flow.logger.info(f"Account created successfully with ID: {msp_account_id}")

    return flow.update_parameters(flow.request_data.id(),
                                  flow.request_data.generate_params_for_update())
