from dateutil.relativedelta import relativedelta
import datetime
from connect_malwarebytes.connect.const import SITE_ID
from malwarebytes.account.application.services import OneViewCreator

allocations = {"ir": 0, "ep": 0, "edr": 0, "eps": 0, "edrs": 0}


def create_new_site(flow):
    """
    Create a New MSP Account ID in MalwareBytes and Save MSP Account ID and Vendor ID
    :param flow:
    :return:
    """
    flow.logger.info("Processing to create a new Site in MalwareBytes.")

    if flow.get_site_id():
        flow.logger.info("Skip step to create Site in MalwareBytes.")
        return

    # First we need to get client_id and client_secret to can do the call to OneView API.
    client_id, client_secret = flow.get_credentials_by_msp_account_id(
        flow.get_msp_account_id_fulfillment(), flow.get_user_id())

    contact = flow._get_parameters_contact()
    account = flow.get_parameters_account()

    now_date = datetime.date.today()
    site_end_date = now_date + relativedelta(months=1)
    body_new_site = {
        "company_name": account.company_name.value,
        "firstname": contact.first_name.value,
        "lastname": contact.last_name.value,
        "email": contact.email.value,
        "account_owner": [
            contact.email.value
        ],
        "site_end_date": site_end_date.strftime('%Y-%m-%d')
    }

    # Here call to API to create a new site.
    site_id = OneViewCreator(flow.oneview_repository(client_id, client_secret)).create_site(
        body_new_site)

    flow.request_data.update_parameter(param_id=SITE_ID, value=site_id)

    return flow.update_parameters(flow.request_data.id(),
                                  flow.request_data.generate_params_for_update())
