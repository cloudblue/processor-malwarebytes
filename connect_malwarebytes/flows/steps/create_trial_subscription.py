from malwarebytes.account.infrastructure.exceptions import (
    MalwareBytesServerException, AccountDataNotValidException, MBClientException
)
from malwarebytes.account.application.services import OneViewCreator
from connect_malwarebytes.connect.messages import TRIAL_SUBS_WRONG_DATA
from connect_malwarebytes.connect.const import (
    PRODUCT_EP,
    PRODUCT_EDR,
    MACHINE_WS_SERVER,
    ALLOCATIONS_EPS,
    ALLOCATIONS_EDRS,
)

allocations = {"ir": 0, "ep": 0, "edr": 0, "eps": 0, "edrs": 0}


def create_new_trial_subscription(flow):
    """
    Create a New MSP Account ID in MalwareBytes and Save MSP Account ID and Vendor ID
    :param flow:
    :return:
    """
    flow.logger.info("Processing to create a new Trial Subscription in MalwareBytes.")

    # First we need to get client_id and client_secret to can do the call to OneView API.
    client_id, client_secret = flow.get_credentials_by_msp_account_id(
        flow.get_msp_account_id_fulfillment(), flow.get_user_id())

    allocations[flow.request_data.trial_product()] = 1  # TODO need to know where got this value.

    if flow.request_data.trial_machine() == MACHINE_WS_SERVER:
        if flow.request_data.trial_product() == PRODUCT_EP:
            allocations[ALLOCATIONS_EPS] = 1  # TODO need to know where got this value.
        if flow.request_data.trial_product() == PRODUCT_EDR:
            allocations[ALLOCATIONS_EDRS] = 1  # TODO need to know where got this value.

    body = {
        "product": flow.request_data.trial_product(),
        "machine_type": flow.request_data.trial_machine(),
        "term_type": "trial",
        "term_length": 30,
        "allocations": allocations
    }

    try:
        # Here call to API to create a trial_subscription.
        OneViewCreator(flow.oneview_repository(client_id, client_secret)). \
            create_trial_subscription(flow.get_site_id(), body)
    except (MalwareBytesServerException, AccountDataNotValidException, MBClientException) as ex:
        return flow.fail_request(
            request_id=flow.request_data.id(),
            error_message=TRIAL_SUBS_WRONG_DATA.format(
                id=flow.get_msp_account_id_fulfillment(), error=ex))
