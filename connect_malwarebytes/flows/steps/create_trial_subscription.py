from malwarebytes.account.infrastructure.exceptions import (
    AccountDataNotValidException, MalwareBytesServerException, MBClientException,
    TrialSubscriptionNotValidException,
)
from malwarebytes.account.application.services import OneViewCreator

from connect_malwarebytes.connect.messages import TRIAL_SUBS_WRONG_DATA
from connect_malwarebytes.connect.const import (
    MACHINE_WS_SER, PRODUCT_EDR, TERM_LENGTH, TRIAL,
)


def create_new_trial_subscription(flow):
    """
    Create a New MSP Account ID in MalwareBytes and Save MSP Account ID and Vendor ID
    :param flow:
    :return:
    """
    flow.logger.info("Processing to create a new Trial Subscription in MalwareBytes.")

    # First we need to get client_id and client_secret to can do the call to OneView API.
    client_id, client_secret = flow.get_credentials_by_msp_account_id(
        flow.get_msp_account_id_fulfillment(), flow.get_user_id())

    allocations = {"ep": 0, "edr": 0, "eps": 0, "edrs": 0}
    if flow.request_data.billing_type() == TRIAL:
        allocations = flow.get_allocations()

    body = {
        "product": PRODUCT_EDR,
        "machine_type": MACHINE_WS_SER,
        "term_type": "trial",
        "term_length": TERM_LENGTH,
        "allocations": allocations,
    }

    try:
        # Here call to API to create a trial_subscription.
        OneViewCreator(flow.oneview_repository(client_id, client_secret)).create_trial_subscription(
            flow.get_site_id(), body)
    except (TrialSubscriptionNotValidException, MalwareBytesServerException,
            AccountDataNotValidException, MBClientException) as ex:
        return flow.fail_request(
            request_id=flow.request_data.id(),
            error_message=TRIAL_SUBS_WRONG_DATA.format(
                id=flow.get_msp_account_id_fulfillment(), error=ex))
