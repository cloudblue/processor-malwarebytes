from connect.eaas.core.responses import InteractiveResponse

from connect_malwarebytes.flows.flows import ActionFlow
from connect_malwarebytes.connect.request import ActionRequest, RequestParser

from malwarebytes.account.domain.exceptions import NotExistsMspIdError
from malwarebytes.account.infrastructure.exceptions import MBClientException
from malwarebytes.account.application.services import AccountSend
from malwarebytes.account.domain.models import AccountId
from malwarebytes.account.domain.messages import INVITE_SENDED


class ResendEmailFlow(ActionFlow):
    """
    Resend Email Invite
    """

    def process(self) -> InteractiveResponse:
        self.logger.info("Starting Action to Resend Invite Email.")

        action_request = ActionRequest(self.request_data)
        action_id = action_request.action_id()
        self.logger.info(f'Processing action "{action_id}"')

        asset_id = action_request.asset_id()
        asset = self.get_asset(asset_id)
        self.logger.info(f'Obtained asset with ID {asset_id}')

        self.request_data = RequestParser.get_instance(asset, config="")

        try:
            self._resend_email()
        except MBClientException as err:
            self.logger.warning(str(err))
            return InteractiveResponse.fail()

        return InteractiveResponse.done(body=INVITE_SENDED)

    def _resend_email(self):
        """
        Resend Email.
        """
        msp_account_id = self.request_data.msp_account_id_fulfillment()
        if not msp_account_id:
            raise NotExistsMspIdError("Subscription not contain any MSP Account ID")
        self.logger.info(
            f"Resend invite Email to MSP Account ID: {msp_account_id}.")
        AccountSend(self.account_repository()).send_email(AccountId(msp_account_id))

        self.logger.info(f"Invite Email sent to MSP Account ID: {msp_account_id}.")
