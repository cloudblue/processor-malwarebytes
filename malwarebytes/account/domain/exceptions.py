from __future__ import annotations


class InvalidFirstNameFormatError(Exception):
    """Exception for an invalid name format"""
    pass  # pragma: no cover


class InvalidLastNameFormatError(Exception):
    """Exception for an invalid name format"""
    pass  # pragma: no cover


class InvalidEmailFormatError(Exception):
    """Exception for an invalid name format"""
    pass  # pragma: no cover


class InvalidPhoneFormatError(Exception):
    """Exception for an invalid name format"""
    pass  # pragma: no cover


class InvalidCompanyNameFormatError(Exception):
    """Exception for an invalid name format"""
    pass  # pragma: no cover


class InvalidStreetNameFormatError(Exception):
    """Exception for an invalid name format"""
    pass  # pragma: no cover


class InvalidCityNameFormatError(Exception):
    """Exception for an invalid name format"""
    pass  # pragma: no cover


class InvalidCountryNameFormatError(Exception):
    """Exception for an invalid name format"""
    pass  # pragma: no cover


class InvalidStateNameFormatError(Exception):
    """Exception for an invalid name format"""
    pass  # pragma: no cover


class InvalidIpFormatError(Exception):
    """Exception for an invalid IP format"""
    pass  # pragma: no cover


class EmailAlreadyExistsError(Exception):
    """Exception for an existing email for account"""
    pass  # pragma: no cover


class InvalidMspIdFormatError(Exception):
    """Exception for an existing Msp Account ID"""
    pass  # pragma: no cover


class NotExistsMspIdError(Exception):
    """Exception for not existing Msp Account ID"""
    pass  # pragma: no cover


class InvalidAccountToImport(Exception):
    """Exception for an existing email for account"""
    pass  # pragma: no cover
