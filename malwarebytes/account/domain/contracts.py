from abc import ABCMeta, abstractmethod

from typing import Optional

from malwarebytes.account.domain.models import Email, Account, MSPAccount, AccountToInject


class AccountRepository(metaclass=ABCMeta):

    @abstractmethod
    def find(self, email: Email) -> Optional[MSPAccount]:
        """
        Find account by its email.

        Parameters
        ----------
        email: Email
            The Email to find.

        Returns
        -------
        Account
            Account found.

        Raises
        ------
        NotFoundError
            If the account is not found.
        """
        pass  # pragma: no cover

    @abstractmethod
    def update(self, account: AccountToInject) -> MSPAccount:
        """
        Updates or create an account.

        Parameter
        ---------
        account: Account
            The account to update or create.

        Returns
        -------
        MSPAccount
            MalwareBytes Account updated or created.
        """
        pass  # pragma: no cover
